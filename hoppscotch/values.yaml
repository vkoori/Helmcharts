# Default values for hoppscotch.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: hoppscotch/hoppscotch
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2024.11.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP

kong:
  enabled: true
  plugins:
  # - key: ot-guard
  #   val: ot_guard
  #   config: {}
  # - key: rate-limit
  #   val: rate-limiting
  #   config:
  #     minute: 60
  #     policy: local
  pathPrefix: /
  externalPorts:
    - 80
    - 443
  hostname_front: "hoppscotch.example.com"
  hostname_admin: "hoppscotch-admin.example.com"
  hostname_backend: "hoppscotch-backend.example.com"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: front
readinessProbe:
  httpGet:
    path: /
    port: front

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
  - name: env-file
    configMap:
      name: env

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
  - name: env-file
    mountPath: "/dist/backend/.env" 
    subPath: .env

nodeSelector: {}

tolerations: []

affinity: {}

ContainerEnv: []

env: {}